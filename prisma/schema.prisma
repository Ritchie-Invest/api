generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  SUPERADMIN
  ADMIN
  STUDENT
}

enum GameType {
  MCQ
}

enum ProgressionType {
  question
  lesson
}

model User {
  id             String         @id @default(cuid())
  email          String         @unique
  password       String
  type           UserType       @default(STUDENT)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  refresh_tokens RefreshToken[]
  progressions   Progression[]
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  expiresAt DateTime @default(now())
  userId    String

  user User @relation(fields: [userId], references: [id])
}

model Chapter {
  id          String   @id @default(cuid())
  title       String
  description String
  isPublished Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  lessons     Lesson[]
}

model Lesson {
  id          String       @id @default(cuid())
  title       String
  description String
  chapterId   String
  order       Int
  isPublished Boolean
  gameType    GameType     @default(MCQ)
  updatedAt   DateTime     @updatedAt
  createdAt   DateTime     @default(now())
  chapter     Chapter      @relation(fields: [chapterId], references: [id])
  modules     GameModule[]
}

model GameModule {
  id        String   @id @default(cuid())
  lessonId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  lesson Lesson     @relation(fields: [lessonId], references: [id])
  mcq    McqModule?
}

model McqModule {
  id           String     @id @default(cuid())
  question     String
  choices      Json
  gameModuleId String     @unique
  gameModule   GameModule @relation(fields: [gameModuleId], references: [id])
}

model Progression {
  id        String          @id @default(cuid())
  userId    String
  entryId   String
  type      ProgressionType
  completed Boolean
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, entryId])
}
